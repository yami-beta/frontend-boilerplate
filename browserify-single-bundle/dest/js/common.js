!function e(r,t,n){function u(f,i){if(!t[f]){if(!r[f]){var c="function"==typeof require&&require;if(!i&&c)return c(f,!0);if(o)return o(f,!0);var a=new Error("Cannot find module '"+f+"'");throw a.code="MODULE_NOT_FOUND",a}var l=t[f]={exports:{}};r[f][0].call(l.exports,function(e){var t=r[f][1][e];return u(t?t:e)},l,l.exports,e,r,t,n)}return t[f].exports}for(var o="function"==typeof require&&require,f=0;f<n.length;f++)u(n[f]);return u}({1:[function(e,r,t){"use strict";function n(e){return e&&e.__esModule?e:{"default":e}}var u=e("./x"),o=n(u),f=e("./y"),i=n(f);console.log((0,o["default"])(6)+(0,i["default"])(10))},{"./x":2,"./y":3}],2:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(e){return 111*e};t["default"]=n},{}],3:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(e){return 2*e};t["default"]=n},{}]},{},[1]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJjb21tb24uanMiLCJzcmMvanMvYXBwLmpzIiwic3JjL2pzL3guanMiLCJzcmMvanMveS5qcyJdLCJuYW1lcyI6WyJlIiwidCIsIm4iLCJyIiwicyIsIm8iLCJ1IiwiYSIsInJlcXVpcmUiLCJpIiwiZiIsIkVycm9yIiwiY29kZSIsImwiLCJleHBvcnRzIiwiY2FsbCIsImxlbmd0aCIsIjEiLCJtb2R1bGUiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0Iiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfeCIsIl94MiIsIl95IiwiX3kyIiwiY29uc29sZSIsImxvZyIsIi4veCIsIi4veSIsIjIiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwieCIsIm51bSIsIjMiLCJ5Il0sIm1hcHBpbmdzIjoiQ0FBQSxRQUFBQSxHQUFBQyxFQUFBQyxFQUFBQyxHQUFBLFFBQUFDLEdBQUFDLEVBQUFDLEdBQUEsSUFBQUosRUFBQUcsR0FBQSxDQUFBLElBQUFKLEVBQUFJLEdBQUEsQ0FBQSxHQUFBRSxHQUFBLGtCQUFBQyxVQUFBQSxPQUFBLEtBQUFGLEdBQUFDLEVBQUEsTUFBQUEsR0FBQUYsR0FBQSxFQUFBLElBQUFJLEVBQUEsTUFBQUEsR0FBQUosR0FBQSxFQUFBLElBQUFLLEdBQUEsR0FBQUMsT0FBQSx1QkFBQU4sRUFBQSxJQUFBLE1BQUFLLEdBQUFFLEtBQUEsbUJBQUFGLEVBQUEsR0FBQUcsR0FBQVgsRUFBQUcsSUFBQVMsV0FBQWIsR0FBQUksR0FBQSxHQUFBVSxLQUFBRixFQUFBQyxRQUFBLFNBQUFkLEdBQUEsR0FBQUUsR0FBQUQsRUFBQUksR0FBQSxHQUFBTCxFQUFBLE9BQUFJLEdBQUFGLEVBQUFBLEVBQUFGLElBQUFhLEVBQUFBLEVBQUFDLFFBQUFkLEVBQUFDLEVBQUFDLEVBQUFDLEdBQUEsTUFBQUQsR0FBQUcsR0FBQVMsUUFBQSxJQUFBLEdBQUFMLEdBQUEsa0JBQUFELFVBQUFBLFFBQUFILEVBQUEsRUFBQUEsRUFBQUYsRUFBQWEsT0FBQVgsSUFBQUQsRUFBQUQsRUFBQUUsR0FBQSxPQUFBRCxLQUFBYSxHQUFBLFNBQUFULEVBQUFVLEVBQUFKLEdDQ0EsWUFVQSxTQUFTSyxHQUF1QkMsR0FBTyxNQUFPQSxJQUFPQSxFQUFJQyxXQUFhRCxHQUFRRSxVQUFTRixHQ1h2RixHQUFBRyxHQUFBZixFQUFBLE9ES0lnQixFQUFNTCxFQUF1QkksR0NKakNFLEVBQUFqQixFQUFBLE9EUUlrQixFQUFNUCxFQUF1Qk0sRUNOakNFLFNBQVFDLEtBQUksRUFBQUosRUFBQUEsWUFBRSxJQUFLLEVBQUFFLEVBQUFBLFlBQUUsT0RZbEJHLE1BQU0sRUFBRUMsTUFBTSxJQUFJQyxHQUFHLFNBQVN2QixFQUFRVSxFQUFPSixHQUNoRCxZQUVBa0IsUUFBT0MsZUFBZW5CLEVBQVMsY0FDN0JvQixPQUFPLEdFbkJULElBQU1DLEdBQUksU0FBQ0MsR0FDVCxNQUFhLEtBQU5BLEVGdUJUdEIsR0FBQUEsV0VyQmVxQixPRnVCVEUsR0FBRyxTQUFTN0IsRUFBUVUsRUFBT0osR0FDakMsWUFFQWtCLFFBQU9DLGVBQWVuQixFQUFTLGNBQzdCb0IsT0FBTyxHRzlCVCxJQUFNSSxHQUFJLFNBQUNGLEdBQ1QsTUFBYSxHQUFOQSxFSGtDVHRCLEdBQUFBLFdHaENld0IsWUhrQ0oiLCJmaWxlIjoiY29tbW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSh7MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbnZhciBfeCA9IHJlcXVpcmUoJy4veCcpO1xuXG52YXIgX3gyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfeCk7XG5cbnZhciBfeSA9IHJlcXVpcmUoJy4veScpO1xuXG52YXIgX3kyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfeSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmNvbnNvbGUubG9nKCgwLCBfeDIuZGVmYXVsdCkoNikgKyAoMCwgX3kyLmRlZmF1bHQpKDEwKSk7XG5cbn0se1wiLi94XCI6MixcIi4veVwiOjN9XSwyOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcblwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xudmFyIHggPSBmdW5jdGlvbiB4KG51bSkge1xuICByZXR1cm4gbnVtICogMTExO1xufTtcbmV4cG9ydHMuZGVmYXVsdCA9IHg7XG5cbn0se31dLDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG52YXIgeSA9IGZ1bmN0aW9uIHkobnVtKSB7XG4gIHJldHVybiBudW0gKiAyO1xufTtcbmV4cG9ydHMuZGVmYXVsdCA9IHk7XG5cbn0se31dfSx7fSxbMV0pXG5cbiIsImltcG9ydCB4IGZyb20gJy4veCc7XG5pbXBvcnQgeSBmcm9tICcuL3knO1xuXG5jb25zb2xlLmxvZyh4KDYpICsgeSgxMCkpO1xuIiwiY29uc3QgeCA9IChudW0pID0+IHtcbiAgcmV0dXJuIG51bSAqIDExMTtcbn07XG5leHBvcnQgZGVmYXVsdCB4O1xuIiwiY29uc3QgeSA9IChudW0pID0+IHtcbiAgcmV0dXJuIG51bSAqIDI7XG59O1xuZXhwb3J0IGRlZmF1bHQgeTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
